# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget arch tf gf js tracelite work plug vt ar kind sdf pcp usd usdGeom usdLux usdShade usdHydra usdRi usdSkel usdUI usdUtils usdAbc usdObj usdSchemaExamples)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

# Create imported target arch
add_library(arch SHARED IMPORTED)

set_target_properties(arch PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "PXR_PYTHON_ENABLED=1"
  INTERFACE_INCLUDE_DIRECTORIES "/opt/local/USD/include"
)

# Create imported target tf
add_library(tf SHARED IMPORTED)

set_target_properties(tf PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "PXR_PYTHON_ENABLED=1"
  INTERFACE_INCLUDE_DIRECTORIES "/Users/sumioka_air/.pyenv/versions/anaconda3-4.3.1/envs/py2/include/python2.7;/opt/local/USD/include;/opt/local/USD/include"
)

# Create imported target gf
add_library(gf SHARED IMPORTED)

set_target_properties(gf PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "PXR_PYTHON_ENABLED=1"
)

# Create imported target js
add_library(js SHARED IMPORTED)

set_target_properties(js PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "PXR_PYTHON_ENABLED=1"
  INTERFACE_INCLUDE_DIRECTORIES "/opt/local/USD/include"
)

# Create imported target tracelite
add_library(tracelite SHARED IMPORTED)

set_target_properties(tracelite PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "PXR_PYTHON_ENABLED=1"
)

# Create imported target work
add_library(work SHARED IMPORTED)

set_target_properties(work PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "PXR_PYTHON_ENABLED=1"
  INTERFACE_INCLUDE_DIRECTORIES "/opt/local/USD/include"
)

# Create imported target plug
add_library(plug SHARED IMPORTED)

set_target_properties(plug PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "PXR_PYTHON_ENABLED=1"
  INTERFACE_INCLUDE_DIRECTORIES "/opt/local/USD/include;/opt/local/USD/include"
)

# Create imported target vt
add_library(vt SHARED IMPORTED)

set_target_properties(vt PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "PXR_PYTHON_ENABLED=1"
  INTERFACE_INCLUDE_DIRECTORIES "/opt/local/USD/include;/opt/local/USD/include"
)

# Create imported target ar
add_library(ar SHARED IMPORTED)

set_target_properties(ar PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "PXR_PYTHON_ENABLED=1"
  INTERFACE_INCLUDE_DIRECTORIES "/opt/local/USD/include"
)

# Create imported target kind
add_library(kind SHARED IMPORTED)

set_target_properties(kind PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "PXR_PYTHON_ENABLED=1"
)

# Create imported target sdf
add_library(sdf SHARED IMPORTED)

set_target_properties(sdf PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "PXR_PYTHON_ENABLED=1"
  INTERFACE_INCLUDE_DIRECTORIES "/opt/local/USD/include"
)

# Create imported target pcp
add_library(pcp SHARED IMPORTED)

set_target_properties(pcp PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "PXR_PYTHON_ENABLED=1"
  INTERFACE_INCLUDE_DIRECTORIES "/opt/local/USD/include;/opt/local/USD/include"
)

# Create imported target usd
add_library(usd SHARED IMPORTED)

set_target_properties(usd PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "PXR_PYTHON_ENABLED=1"
  INTERFACE_INCLUDE_DIRECTORIES "/opt/local/USD/include;/opt/local/USD/include"
)

# Create imported target usdGeom
add_library(usdGeom SHARED IMPORTED)

set_target_properties(usdGeom PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "PXR_PYTHON_ENABLED=1"
  INTERFACE_INCLUDE_DIRECTORIES "/opt/local/USD/include"
)

# Create imported target usdLux
add_library(usdLux SHARED IMPORTED)

set_target_properties(usdLux PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "PXR_PYTHON_ENABLED=1"
)

# Create imported target usdShade
add_library(usdShade SHARED IMPORTED)

set_target_properties(usdShade PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "PXR_PYTHON_ENABLED=1"
)

# Create imported target usdHydra
add_library(usdHydra SHARED IMPORTED)

set_target_properties(usdHydra PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "PXR_PYTHON_ENABLED=1"
)

# Create imported target usdRi
add_library(usdRi SHARED IMPORTED)

set_target_properties(usdRi PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "PXR_PYTHON_ENABLED=1"
  INTERFACE_INCLUDE_DIRECTORIES "/opt/local/USD/include"
)

# Create imported target usdSkel
add_library(usdSkel SHARED IMPORTED)

set_target_properties(usdSkel PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "PXR_PYTHON_ENABLED=1"
  INTERFACE_INCLUDE_DIRECTORIES "/opt/local/USD/include;/Users/sumioka_air/.pyenv/versions/anaconda3-4.3.1/envs/py2/include/python2.7"
)

# Create imported target usdUI
add_library(usdUI SHARED IMPORTED)

set_target_properties(usdUI PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "PXR_PYTHON_ENABLED=1"
)

# Create imported target usdUtils
add_library(usdUtils SHARED IMPORTED)

set_target_properties(usdUtils PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "PXR_PYTHON_ENABLED=1"
  INTERFACE_INCLUDE_DIRECTORIES "/opt/local/USD/include"
)

# Create imported target usdAbc
add_library(usdAbc SHARED IMPORTED)

set_target_properties(usdAbc PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "PXR_PYTHON_ENABLED=1"
  INTERFACE_INCLUDE_DIRECTORIES "/opt/local/USD/include;/opt/local/USD/include;/opt/local/USD/include/OpenEXR"
)

# Create imported target usdObj
add_library(usdObj SHARED IMPORTED)

set_target_properties(usdObj PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "PXR_PYTHON_ENABLED=1"
  INTERFACE_INCLUDE_DIRECTORIES "/opt/local/USD/include;/Users/sumioka_air/.pyenv/versions/anaconda3-4.3.1/envs/py2/include/python2.7"
)

# Create imported target usdSchemaExamples
add_library(usdSchemaExamples SHARED IMPORTED)

set_target_properties(usdSchemaExamples PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "PXR_PYTHON_ENABLED=1"
  INTERFACE_INCLUDE_DIRECTORIES "/opt/local/USD/include;/Users/sumioka_air/.pyenv/versions/anaconda3-4.3.1/envs/py2/include/python2.7"
)

# Load information for each installed configuration.
get_filename_component(_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
file(GLOB CONFIG_FILES "${_DIR}/pxrTargets-*.cmake")
foreach(f ${CONFIG_FILES})
  include(${f})
endforeach()

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(target ${_IMPORT_CHECK_TARGETS} )
  foreach(file ${_IMPORT_CHECK_FILES_FOR_${target}} )
    if(NOT EXISTS "${file}" )
      message(FATAL_ERROR "The imported target \"${target}\" references the file
   \"${file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
    endif()
  endforeach()
  unset(_IMPORT_CHECK_FILES_FOR_${target})
endforeach()
unset(_IMPORT_CHECK_TARGETS)

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
